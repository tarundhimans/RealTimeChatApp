@model RealTimeChatApp.Models.Message

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center"> Live Chat</h1>

<div class="container">
    <!-- User and Admin Indicators -->
    <div class="row p-1">
        <div class="col-6 text-end">
            @if (User.Identity.IsAuthenticated)
            {
                if (User.IsInRole("Admin"))
                {
                    <span style="color: blue;">Admin: @User.Identity.Name</span>
                }
                else
                {
                    <span style="color: blue;">User: @User.Identity.Name</span>
                }
            }
            else
            {
                <span style="color: red;">User: Not Logged In</span>
            }
        </div>
    </div>

    <!-- Message Input Form -->
    <form asp-action="SendMessage" method="post" enctype="multipart/form-data">
        <div class="row p-1">
            <div class="col-6">
                <div class="row p-1 align-items-center">
                    <div class="col-2">User</div>
                    <div class="col-10">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <input type="text" id="userInput" value="@User.Identity.Name" readonly style="filter: brightness(80%);" />
                        }
                        else
                        {
                            <input type="text" id="userInput" />
                        }
                    </div>
                </div>

                <div class="row p-1 align-items-center">
                    <div class="col-2">Message</div>
                    <div class="col-10"><input type="text" class="w-100" id="messageInput" name="message" /></div>
                </div>

                <div class="row p-1 align-items-center">
                    <div class="col-2">File</div>
                    <div class="col-5">
                        <input type="file" id="fileInput" name="file" />
                    </div>
                </div>

                <div class="row p-1">
                    <div class="col-12 text-end">
                        <input class="btn btn-info" type="submit" id="sendButton" value="Send Message" />
                    </div>
                </div>

                <div class="row p-1">
                    <div class="col-12">
                        <hr />
                    </div>
                </div>

                <!-- Message List -->
                <div class="row p-1">
                    <div class="col-12" style="height: 200px; overflow-y: auto;">
                        <ul class="text-dark" id="messagesList">Message:</ul>
                    </div>
                </div>
            </div>

            <!-- All Users -->
            <div class="col-6">
                <div class="row p-1">
                    <div class="col-12">
                        <h4>All Users:</h4>
                        <ul id ="userList">
                            @if (ViewBag.AllUsers != null)
                            {
                                foreach (var user in ViewBag.AllUsers)
                                {
                                    <li id="user-@(user.UserName)" class="@(User.Identity.IsAuthenticated && User.Identity.Name == user.UserName ? "btn btn-success glow" : "btn btn-danger")">@user.UserName</li>
                                }
                            }
                        </ul>
                        <h4>Online Users:</h4>
                        <ul id="onlineUsersList"></ul>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <div class="col-12">
        <h4>Shared Files:</h4>
        <ul>
            @foreach (var message in ViewBag.Files)
            {
                if (!string.IsNullOrEmpty(message.filepath))
                {
                    <li>
                        File shared by @message.User.UserName:
                        <a href="~/uploads/@message.filepath" download>@message.filepath</a>
                    </li>
                }
            }
        </ul>    
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js"></script>
@* <script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chathub")
        .build();

    connection.on("UserConnected", function (username) {
        addUser(username);
    });

    connection.on("UserDisconnected", function (username) {
        removeUser(username);
    });

    connection.start().then(function () {
        console.log("SignalR connected.");
    }).catch(function (err) {
        return console.error(err.toString());
    });
    function addUser(username) {
        var userElement = document.createElement("li");
        userElement.id = "user-" + username;
        userElement.textContent = username;
        document.getElementById("userList").appendChild(userElement);
    }

    // Function to remove a user from the list
    function removeUser(username) {
        var userElement = document.getElementById("user-" + username);
        if (userElement) {
            userElement.remove();
        }
    }
</script>
 *@